<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ch.hslu.structhing</groupId>
        <artifactId>parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>backend</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin</artifactId>
            <version>5.6.3</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.9</version>
        </dependency>


        <!-- H2 Database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.2.224</version>
        </dependency>

        <!-- Flyway -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>10.3.0</version>
        </dependency>

        <!-- jOOQ -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>3.19.0</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>3.19.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
        <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
            <version>9.17.0</version>
            <configuration>
                <!-- Configure your database connection settings here -->
                <url>jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</url>
                <user>your_username</user>
                <password>your_password</password>
                <schemas>
                    <schema>public</schema>
                </schemas>
                <locations>
                    <location>filesystem:./src/main/resources/flyway</location>
                </locations>
            </configuration>
        </plugin>
        <plugin>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>
            <version>3.13.3</version>

            <executions>
                <execution>
                    <id>jooq-codegen</id>
                    <phase>generate-sources</phase>
                    <goals>
                        <goal>generate</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <!-- Configure the database connection here -->
                <jdbc>
                    <driver>org.h2.Driver</driver>
                    <url>jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</url>
                    <user>your_username</user>
                    <password>your_password</password>
                </jdbc>

                <generator>
                    <!-- The default code generator. You can override this one, to generate your own code style.
                         Supported generators:
                         - org.jooq.codegen.JavaGenerator
                         - org.jooq.codegen.KotlinGenerator
                         - org.jooq.codegen.ScalaGenerator
                         Defaults to org.jooq.codegen.JavaGenerator -->
                    <name>org.jooq.codegen.JavaGenerator</name>

                    <database>
                        <!-- The database type. The format here is:
                             org.jooq.meta.[database].[database]Database -->
                        <name>org.jooq.meta.h2.H2Database</name>

                        <!-- The database schema (or in the absence of schema support, in your RDBMS this
                             can be the owner, user, database name) to be generated -->
                        <inputSchema>public</inputSchema>

                        <!-- All elements that are generated from your schema
                             (A Java regular expression. Use the pipe to separate several expressions)
                             Watch out for case-sensitivity. Depending on your database, this might be important! -->
                        <includes>
                            .*
                        </includes>

                        <!-- All elements that are excluded from your schema
                             (A Java regular expression. Use the pipe to separate several expressions).
                             Excludes match before includes, i.e. excludes have a higher priority -->
                        <excludes></excludes>
                    </database>

                    <target>
                        <!-- The destination package of your generated classes (within the destination directory) -->
                        <packageName>com.lordniksys.model.jooq.generated</packageName>

                        <!-- The destination directory of your generated classes. Using Maven directory layout here -->
                        <directory>src/main/java/</directory>
                    </target>
                </generator>
            </configuration>
        </plugin>
        </plugins>
    </build>
</project>
