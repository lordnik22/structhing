<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ch.hslu.structhing</groupId>
        <artifactId>parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>backend</artifactId>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <ch.hslu.structhing.backend.database.path>${project.basedir}/src/main/resources/database/structhing
        </ch.hslu.structhing.backend.database.path>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin</artifactId>
            <version>5.6.3</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.9</version>
        </dependency>

        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>3.0.1</version>
        </dependency>

        <!-- H2 Database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.2.224</version>
        </dependency>

        <!-- Flyway -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>9.20.1</version>
        </dependency>

        <!-- jOOQ -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>3.19.0</version>
        </dependency>

        <dependency>
            <groupId>ai.djl</groupId>
            <artifactId>api</artifactId>
            <version>0.25.0</version>
        </dependency>
        <dependency>
            <groupId>ai.djl</groupId>
            <artifactId>model-zoo</artifactId>
            <version>0.25.0</version>
        </dependency>

        <dependency>
            <groupId>ai.djl.pytorch</groupId>
            <artifactId>pytorch-engine</artifactId>
            <version>0.25.0</version>
        </dependency>

        <dependency>
            <groupId>ai.djl.pytorch</groupId>
            <artifactId>pytorch-native-cpu</artifactId>
            <classifier>linux-x86_64</classifier>
            <scope>runtime</scope>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>ai.djl.pytorch</groupId>
            <artifactId>pytorch-jni</artifactId>
            <version>2.0.1-0.25.0</version>
            <scope>runtime</scope>
        </dependency>


        <dependency>
            <groupId>org.openpnp</groupId>
            <artifactId>opencv</artifactId>
            <version>4.9.0-0</version>
        </dependency>


        <!-- DJL Hugging Face Library -->
        <dependency>
            <groupId>ai.djl.huggingface</groupId>
            <artifactId>tokenizers</artifactId>
            <version>0.25.0</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Configure your database connection settings here -->
                    <url>jdbc:h2:${ch.hslu.structhing.backend.database.path}</url>
                    <user>sa</user>
                    <password></password>
                    <validateMigrationNaming>true</validateMigrationNaming>
                    <locations>
                        <location>filesystem:./src/main/resources/database/structure/</location>
                    </locations>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <executions>
                    <execution>
                        <id>jooq-codegen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Configure the database connection here -->
                    <jdbc>
                        <driver>org.h2.Driver</driver>
                        <url>jdbc:h2:${ch.hslu.structhing.backend.database.path}</url>
                        <user>sa</user>
                        <password></password>
                    </jdbc>

                    <generator>
                        <!-- The default code generator. You can override this one, to generate your own code style.
                             Supported generators:
                             - org.jooq.codegen.JavaGenerator
                             - org.jooq.codegen.KotlinGenerator
                             - org.jooq.codegen.ScalaGenerator
                             Defaults to org.jooq.codegen.JavaGenerator -->
                        <name>org.jooq.codegen.JavaGenerator</name>

                        <database>
                            <!-- The database type. The format here is:
                                 org.jooq.meta.[database].[database]Database -->
                            <name>org.jooq.meta.h2.H2Database</name>

                            <!-- The database schema (or in the absence of schema support, in your RDBMS this
                                 can be the owner, user, database name) to be generated -->
                            <inputSchema>PUBLIC</inputSchema>

                            <!-- All elements that are generated from your schema
                                 (A Java regular expression. Use the pipe to separate several expressions)
                                 Watch out for case-sensitivity. Depending on your database, this might be important! -->
                            <includes>
                                .*
                            </includes>

                            <!-- All elements that are excluded from your schema
                                 (A Java regular expression. Use the pipe to separate several expressions).
                                 Excludes match before includes, i.e. excludes have a higher priority -->
                            <excludes>
                                flyway_schema_history
                            </excludes>
                        </database>

                        <target>
                            <!-- The destination package of your generated classes (within the destination directory) -->
                            <packageName>ch.hslu.structhing.backend.jooq.generated</packageName>

                            <!-- The destination directory of your generated classes. Using Maven directory layout here -->
                            <directory>./src/main/java/</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
